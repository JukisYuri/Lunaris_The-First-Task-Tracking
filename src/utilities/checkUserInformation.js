const { splitMessage } = require("../helpers/split_message")

async function checkUserInformation(message, userId) {
    try {
        let user = await message.client.users.fetch(userId, { force: true });

        // L·∫•y avatar, banner, avatar decoration
        const formatedAvt = user.avatarURL({ dynamic: true, size: 4096}) || "kh√¥ng c√≥"
        const formatedBanner = user.bannerURL({ dynamic: true, size: 4096}) || "kh√¥ng c√≥"
        const formatedAvtDeco = user.avatarDecorationURL({ dynamic: true, size: 4096}) || "kh√¥ng c√≥"
        // const formatedJSONData = user.toJSON() || "kh√¥ng r√µ"

        const userInfor = `**üìá Th√¥ng tin ng∆∞·ªùi d√πng:**\n` +
        `**Ng∆∞·ªùi d√πng:** ${user.username}\n` +
        `**ID:** ${user.id}\n` +
        `**T√™n c√¥ng khai:** ${user.globalName}\n` +
        `**Ng√†y ƒë∆∞·ª£c t·∫°o:** ${user.createdAt.toLocaleDateString("vi-VN")}\n` +
        `**ƒê√£ ƒë∆∞·ª£c cache d·ªØ li·ªáu:** ${user.partial ? 'c√≥' : 'kh√¥ng'}\n` +
        `**C√≥ ph·∫£i l√† bot:** ${user.bot ? 'c√≥' : 'kh√¥ng'}\n` +
        `**Avatar Decorate:** ${formatedAvtDeco}\n` +
        `**Avatar:** ${formatedAvt}\n` +
        `**Banner:** ${formatedBanner}\n`
        // `**JSON Data:** \`\`\`json\n${JSON.stringify(formatedJSONData, null, 2)}\n\`\`\``

        const formatedInfo = splitMessage(userInfor)
        for (const chunk of formatedInfo){
            await message.reply(chunk)
        }
    } catch (err) {
        console.error(err)
        await message.reply('‚ùå ƒê√£ x·∫£y ra l·ªói khi nh·∫≠p')
    }
}

module.exports = { checkUserInformation }